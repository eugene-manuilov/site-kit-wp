name: WP 4.9

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  docker-image:
    name: Build WP Image
    runs-on: ubuntu-latest
    # if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('tests/e2e/**/*.php', 'bin/local-env/docker/wordpress/Dockerfile') }}
      - uses: crazy-max/ghaction-docker-meta@v1
        id: metadata
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          images: site-kit/wp-4-9
      - uses: docker/setup-qemu-action@v1
        if: steps.cache.outputs.cache-hit != 'true'
      - uses: docker/setup-buildx-action@v1
        if: steps.cache.outputs.cache-hit != 'true'
      - uses: docker/login-action@v1 
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - uses: docker/build-push-action@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          context: .
          file: ./bin/local-env/docker/wordpress/Dockerfile
          labels: ${{ steps.metadata.outputs.labels }}
          tags: |
            ghcr.io/eugene-manuilov/site-kit/wp-4-9:20201101.0
          build-args: |
            WP_IMAGE=wordpress:4.9
  e2e:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    needs: docker-image
    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: "1"
          MYSQL_DATABASE: wordpress_test
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=10
      wordpress:
        image: ghcr.io/eugene-manuilov/site-kit/wp-4-9:20201101.0
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
        ports:
          - 9002:80
        options: >-
          --mount type=bind,source=/home/runner/work/site-kit-wp/site-kit-wp,target=/var/www/html/wp-content/plugins/google-site-kit,readonly
    steps:
      - uses: actions/checkout@v2
      - name: Get Info
        id: info
        run: |
          echo "::set-output name=composerCacheFilesDir::$(composer config cache-files-dir)"
          echo "::set-output name=nvmrc::$(cat .nvmrc)"
      - name: Load Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.info.outputs.composerCacheFilesDir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Composer Install
        run: composer install --no-dev --no-interaction --no-progress
      - name: Configure WordPress
        run: |
          docker exec --user 33:33 ${{ job.services.wordpress.id }} wp db import wp-content/plugins/google-site-kit/bin/local-env/dump.sql
          docker exec --user 33:33 ${{ job.services.wordpress.id }} wp core update-db
          docker exec --user 33:33 ${{ job.services.wordpress.id }} wp plugin install gutenberg --version="4.9.0" --activate
          docker exec --user 33:33 ${{ job.services.wordpress.id }} wp plugin install amp --version="2.0.0"
          docker exec --user 33:33 ${{ job.services.wordpress.id }} wp plugin update amp --minor
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.info.outputs.nvmrc }}"
      - name: Load NPM Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install NPM Dependencies
        run: npm ci
      - name: Run Tests
        run: npm run test:e2e -- tests/e2e/specs/modules/analytics/dashboard-date-range.test.js
